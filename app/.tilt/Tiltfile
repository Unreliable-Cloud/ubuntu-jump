# Allow deploying to k8s-us-east-1
allow_k8s_contexts('k8s-us-east-1')

# Always use docker hub
default_registry('docker.io/youvegotmoxie')

# Build container
docker_build(
  "devpod",
  context = '../docker',
  dockerfile = '../docker/Dockerfile',
  extra_tag='devpod:tilt-dev',
  live_update = [
    sync('../docker/src/templates', '/usr/src/app/templates'),
    sync('../docker/src/static', '/usr/src/app/static'),
    sync('../docker/src/requirements.txt', '/home/devpod/requirements.txt'),
    sync('../docker/src/app.py', '/usr/src/app/app.py'),
    sync('../docker/src/dev_pod.py', '/usr/src/app/dev_pod.py'),
    sync('../docker/src/helm', '/home/devpod/helm'),
    run (
      'pip3 install --no-cache-dir -r /home/devpod/requirements.txt',
      trigger = '../docker/src/requirements.txt'
    ),
    run(
      'chown -Rv devpod: /home/devpod/helm',
      trigger = '../docker/src/helm'
    )
  ]
)

# Keep container images in check
docker_prune_settings(keep_recent = 2, num_builds = 5)

# Deploy to k8s
k8s_yaml(['deployment.yaml', 'service.yaml', 'clusterrolebinding.yaml'])
k8s_resource(
  workload = 'devpod',
  labels = ['devpod'],
  objects=['devpod:serviceaccount:default', 'devpod:clusterrolebinding'],
  pod_readiness = 'wait'
)

#docker_build('example-python-image', '.', build_args={'flask_env': 'development'},
#    live_update=[
#        sync('.', '/app'),
#        run('cd /app && pip install -r requirements.txt',
#            trigger='./requirements.txt'),
#
#        # if all that changed was start-time.txt, make sure the server
#        # reloads so that it will reflect the new startup time
#        run('touch /app/app.py', trigger='./start-time.txt'),
#
#        # add a congrats message!
#        run('sed -i "s/Hello cats!/{}/g" /app/templates/index.html'.
#            format(congrats)),
#])